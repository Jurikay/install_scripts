#!/bin/bash

# Set Colors
e_header() { printf "\n$(tput setaf 141)%s$(tput sgr0)\n" "$@"
}
e_success() { printf "$(tput setaf 71)üëå %s$(tput sgr0)\n" "$@"
}
e_error() { printf "$(tput setaf 1)‚úñ %s$(tput sgr0)\n" "$@"
}
e_warning() { printf "$(tput setaf 153)‚≠ïÔ∏è %s$(tput sgr0)\n" "$@"
}

  # Set Directory Locations
  # assets_dir: This is the location of your 'assets' directory
  # backup_dir: Desired path to a backup folder goes here here.
  assets_dir="$HOME"/Dropbox/System/Library
  backup_dir="$HOME"/Desktop/Backupslel/$(date "+%Y-%m-%d-%H_%M")

  sudo -v # ask for password only at the beginning

  e_header "---------- BEGINNING CONFIG SCRIPT ----------"
  e_header "Hang tight.......here we go....."

  # 4.    Symlinks to ~/Library/Application Support/*
  #
  #       This script takes all directories found in
  #       "$dropbox_assets_dir"/ApplicationSupportBase/
  #       and symlinks them to ~/Library/Application Support/

  e_header "---------- Symlinking into ~/Library/Application Support/ ----------"

  ASSETS="$assets_dir"/ApplicationSupport/*
  SOURCE="$assets_dir"/ApplicationSupport/
  DEST="$HOME"/Library/Application\ Support/

  # set IFS to allow spaces in names
  SAVEIFS=$IFS
  IFS=$(echo -en "\n\b")
  if [ ! -d "$SOURCE" ]; then
    e_error "Can't find source directory: $SOURCE"
  else
    if [ ! -d "$DEST" ]; then
      mkdir -p "$DEST"
    fi
    for f in $ASSETS
    do
      if [ -L "$DEST"`basename "$f"` ]; then
        e_success "Already Linked: "$DEST"`basename "$f"`"
      else
        e_warning "Linking : "$DEST"`basename "$f"`"
        if [ -e "$DEST"`basename "$f"` ]; then
          if [ ! -d "$backup_dir" ]; then
            mkdir -p "$backup_dir"
          fi
          mv "$DEST"`basename "$f"` "$backup_dir"/`basename "$f"`
          ln -s "$SOURCE"`basename "$f"` "$DEST"`basename "$f"`
        else
          ln -s "$SOURCE"`basename "$f"` "$DEST"`basename "$f"`
        fi
      fi
    done
  fi
  # restore $IFS
  IFS=$SAVEIFS
  unset ASSETS
  unset SOURCE
  unset DEST

  #
  # Notify if Backups were created of any files above
  #
  e_header "---------- Processing Backups  ----------"
  if [ -e $backup_dir ]; then
    e_warning "Backups moved to "$backup_dir""
  else
    e_success "No Backups Created"
  fi
  e_header "---------- YAY! ALL DONE  ----------"
